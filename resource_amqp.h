/*
 * Asterisk -- An open source telephony toolkit.
 *
 * Copyright (C) 2019-2022 The Wazo Authors  (see the AUTHORS file)
 *
 * Wazo
 *
 * See http://www.asterisk.org for more information about
 * the Asterisk project. Please do not directly contact
 * any of the maintainers of this project for assistance;
 * the project provides a web site, mailing lists and IRC
 * channels for your use.
 *
 * This program is free software, distributed under the terms of
 * the GNU General Public License Version 2. See the LICENSE file
 * at the top of the source tree.
 */

/*! \file
 *
 * \brief Generated file - declares stubs to be implemented in
 * res/ari/resource_amqp.c
 *
 * AMQP resource
 *
 * \author Wazo
 */

/*
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 * !!!!!                               DO NOT EDIT                        !!!!!
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 * This file is generated by a mustache template. Please see the original
 * template in rest-api-templates/ari_resource.h.mustache
 */

#ifndef _ASTERISK_RESOURCE_AMQP_H
#define _ASTERISK_RESOURCE_AMQP_H

#include "asterisk/ari.h"

/*! Argument struct for ast_ari_amqp_stasis_subscribe() */
struct ast_ari_amqp_stasis_subscribe_args {
	/*! Application's name */
	const char *application_name;
};
/*!
 * \brief Create a stasis subscription to AMQP.
 *
 * Create a Stasis application and subscribe to its events and forward them to AMQP. The application's name must be unique.
 *
 * \param headers HTTP headers
 * \param args Swagger parameters
 * \param[out] response HTTP response
 */
void ast_ari_amqp_stasis_subscribe(struct ast_variable *headers, struct ast_ari_amqp_stasis_subscribe_args *args, struct ast_ari_response *response);
/*! Argument struct for ast_ari_amqp_stasis_unsubscribe() */
struct ast_ari_amqp_stasis_unsubscribe_args {
	/*! Application's name */
	const char *application_name;
};
/*!
 * \brief Delete a stasis subscription to AMQP.
 *
 * Delete a Stasis application and subscribe to its events and forward them to AMQP. The application's name must be unique.
 *
 * \param headers HTTP headers
 * \param args Swagger parameters
 * \param[out] response HTTP response
 */
void ast_ari_amqp_stasis_unsubscribe(struct ast_variable *headers, struct ast_ari_amqp_stasis_unsubscribe_args *args, struct ast_ari_response *response);

#endif /* _ASTERISK_RESOURCE_AMQP_H */
